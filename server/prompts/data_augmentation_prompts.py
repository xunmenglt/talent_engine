generate_nl_sql_task_prompt="""
你是一位熟悉 MySQL 语法的数据库专家，任务是根据提供的数据库结构（Schema）、表格内容数据样例，以及一个已有的问题示例，构造一个**新的自然语言问题**，并为该问题编写正确的 SQL 查询语句。

# 背景提示（请牢记）：
在真实业务中，员工的技能、活动、考评等信息通常分布在多个表中，字段名称可能为自由文本（如岗位、活动名称、奖励描述等），需要使用模糊匹配、连接条件、子查询等手段提取有价值信息。特别注意以下几点：

1. 技能、岗位、活动等文本类字段应使用 `LIKE '%关键词%'` 进行模糊匹配；
2. 涉及两个条件的联合，如“同时具备 X 和 Y”，应使用子查询 + `HAVING COUNT(...)` 或多表 JOIN；
3. 对于员工身份标识（如 `EMP_NO`）需注意跨表连接，保持编码一致性，必要时使用 `CONVERT(... USING utf8mb4) COLLATE utf8mb4_unicode_ci`；
4. 某些条件（如“担任翻译工作”、“作品被收藏”）可能隐藏在 `activity_name`、`reword_desc`、`perform_desc` 等字段中，需要多字段联合模糊判断；
5. 保证生成 SQL 可在提供的结构和数据下执行，语义完整、逻辑正确。

# 要求：
1. 生成的新问题需要与原问题语义结构一样，但是需要不同的表述，实体内容也可以不一致，但应合理使用相同的数据库结构；
2. SQL 查询语句必须符合 MySQL 语法，使用大写关键词，末尾加英文分号；
3. SQL 查询应在语义上与新问题匹配，并能正确返回预期结果；
4. 多表场景下请使用 JOIN，并明确 ON 条件；
5. 不生成语义错误或结构非法的 SQL 语句；
6. 输出仅包含 JSON 格式的结构化结果，格式如下：

```json
{
  "question": "生成的问题（中文，自然语言）",
  "sql": "与问题对应的 SQL 查询语句（MySQL 格式）",
  "tables": ["SQL 查询中涉及的表名（数组）"]
}
````

# 输入内容

【数据库结构】
{{sql_schema}}

【数据样例】
{{sql_example_data}}

【参考问题】
{{reference_question}}

【参考问题对应的SQL语句】
{{reference_sql}}

# 请根据以上信息，输出结果：

【输出内容】
"""

generate_nl_sql_task_ref_sql_prompt="""
你是一位熟悉 MySQL 语法的数据库专家，任务是根据提供的数据库结构（Schema）、表格内容数据样例，以及一个已有的问题示例，构造一个**新的自然语言问题**，并为该问题编写正确的 SQL 查询语句。

# 背景提示（请牢记）：
在真实业务中，员工的技能、活动、考评等信息通常分布在多个表中，字段名称可能为自由文本（如岗位、活动名称、奖励描述等），需要使用模糊匹配、连接条件、子查询等手段提取有价值信息。特别注意以下几点：

1. 技能、岗位、活动等文本类字段应使用 `LIKE '%关键词%'` 进行模糊匹配；
2. 涉及两个条件的联合，如“同时具备 X 和 Y”，应使用子查询 + `HAVING COUNT(...)` 或多表 JOIN；
3. 某些条件（如“担任翻译工作”、“作品被收藏”）可能隐藏在 `activity_name`、`reword_desc`、`perform_desc` 等字段中，需要多字段联合模糊判断；
4. 保证生成 SQL 可在提供的结构和数据下执行，语义完整、逻辑正确。
5. SQL语句执行后其结果必须在“数据样例”中
6. 问题中的关键词查询时可能需要合法的分词，不能包含任何特殊字符或标点符号；


# 要求：
1. 生成的新问题需要与原问题语义结构一样，但是需要不同的表述，实体内容也可以不一致，但应合理使用相同的数据库结构；
2. SQL 查询语句必须符合 MySQL 语法，使用大写关键词，末尾加英文分号；
3. SQL 查询应在语义上与新问题匹配，并能正确返回预期结果；
4. 多表场景下请使用 JOIN，并明确 ON 条件；
5. 不生成语义错误或结构非法的 SQL 语句；
6. 输出仅包含 JSON 格式的结构化结果，格式如下：

```json
{
  "question": "生成的问题（中文，自然语言）",
  "sql": "与问题对应的 SQL 查询语句（MySQL 格式）",
  "tables": ["SQL 查询中涉及的表名（数组）"]
}
````

# 输入内容

【数据库结构】
{{sql_schema}}

【数据样例】
{{sql_example_data}}

【参考问题】
{{reference_question}}

【参考问题对应的SQL语句】
{{reference_sql}}

# 请根据以上信息，输出结果：

【输出内容】
"""


fix_faulty_sql_prompt = """
你是一位熟悉 MySQL 的数据库专家，任务是根据给定的数据库结构（Schema）、数据样例、自然语言问题以及报错信息，对出错的 SQL 查询语句进行修复。

# 输入信息包含：
1. 【数据库结构】：数据库中所有相关表的定义，包括字段类型、主键、索引等；
2. 【数据样例】：表中部分样例数据，便于理解字段含义和数据范围；
3. 【自然语言问题】：表示用户想通过 SQL 查询达成的真实目的；
4. 【错误SQL语句】：用户原始输入的 SQL 查询语句，存在语法错误或逻辑错误；
5. 【执行异常】：用户执行错误 SQL 时数据库返回的报错信息。

# 你的任务是：
1. 判断原始 SQL 报错的原因；
2. 基于上下文理解用户的查询意图；
3. 重写出一个语法正确、逻辑合理、能成功执行的 SQL 查询语句；
4. 保证新 SQL 与原始问题语义一致；
5. SQL 语句必须使用 MySQL 语法，关键词大写，末尾加英文分号；
6. 输出格式仅为 JSON，结构如下：

```json
{
  "fixed_sql": "修复后的 SQL 查询语句（MySQL 格式）",
  "reason": "简要说明修复原因或报错原因"
}
```

# 输入内容

【数据库结构】
{{sql_schema}}

【数据样例】
{{sql_example_data}}

【自然语言问题】
{{question}}

【错误SQL语句】
{{error_sql}}

【执行异常】
{{error_message}}

# 请根据以上信息，输出结果(仅输出 JSON):

【输出内容】
"""